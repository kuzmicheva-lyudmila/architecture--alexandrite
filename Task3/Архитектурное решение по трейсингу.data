Анализ системы и точки возможных проблем
Заказы могут зависать в следующих местах:
    1. Взаимодействие CRM и MES
        - Долгая или неудачная передача 3D-модели на расчёт стоимости.
        - Потеря сообщений или зависание в RabbitMQ.
    2. Процесс расчёта стоимости в MES
        - Долгая обработка сложных моделей.
        - Ошибки при сохранении результата в БД MES.
    3. CRM не получает информацию о расчёте стоимости
        - Потеря сообщений в очереди RabbitMQ.
        - Ошибки при обновлении статуса заказа.
    4. Передача заказов в производство
        - Заказ застрял в CRM и не перешёл в статус MANUFACTURING_APPROVED.
        - MES не получил информацию о подтверждении заказа.
    5. Ошибки API для внешних клиентов
        - Потеря запроса на создание заказа.
        - Ошибки валидации данных.

Данные, которые должны попадать в трейсинг
    - ID заказа (чтобы отследить весь путь заказа).
    - Время обработки каждого этапа.
    - Ошибки и исключения (с указанием причины и кода ошибки).
    - Информация о потерянных или зависших сообщениях в RabbitMQ.
    - API-запросы (кто и когда вызывал API, параметры запроса и результат).
    - Взаимодействие с базами данных (задержки, ошибки запросов).

Мотивация
Трейсинг поможет
    - Сократить время расследования инцидентов (заказ завис? видно, где именно).
    - Уменьшить потери заказов за счёт выявления и исправления проблем.
    - Улучшить SLA для B2B-заказов.
    - Оптимизировать производительность API и RabbitMQ.
    - Улучшить пользовательский опыт за счёт снижения задержек обработки заказов.

Предлагаемое решение
Технологии
    - Jaeger или OpenTelemetry для сбора и визуализации трейсинга.
    - Логирование в ELK (Elasticsearch + Logstash + Kibana) для поиска проблем в заказах.
    - Интеграция с Prometheus + Grafana для отображения метрик.
Что нужно сделать?
    - Внедрить OpenTelemetry в онлайн-магазин, CRM и MES.
    - Добавить трейсинг в API и RabbitMQ.
    - Добавить трейс-ид в логи, чтобы можно было связывать их с трассировкой.
    - Настроить JaegerUI для визуализации трейсинга и поиска проблемных мест.
Диаграмма контейнеров: https://drive.google.com/file/d/1GKbAvyKNXmfm_lhKruzHeu2_eu1-KaEu/view?usp=sharing

Компромиссы
    - Полный трейсинг требует доработки всех сервисов: внедрять поэтапно.
    - Трейсинг нагружает систему логирования: оптимизировать уровень детализации.
    - MES - вендорское ПО: добавить метрики в крупные блоки.

Безопасность
    - Аутентификация и авторизация: доступ к трейсингу только у администраторов и службы поддержки.
    - Маскирование данных: в логах и трейсах не должно быть персональных данных клиентов.
    - Шифрование данных: все передаваемые данные шифруются (TLS).
