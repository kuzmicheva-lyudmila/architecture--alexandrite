Cуществующие и потенциальные проблемные места:
1. Низкая производительность MES:
        - долгая обработка сложных 3D-моделей (до 30 минут)
        - высокая нагрузка на один инстанс MES и его базы данных
        - возможные блокировки в БД при обновлении статусов заказов.
2. Просроченные заказы и проблемы с CRM:
        - CRM получает заказы с задержками, возможно, из-за RabbitMQ
        - Неочевидные причины зависания заказов в процессе, недостаточный контроль SLA на выполнение заказов
3. Слабая масштабируемость API для партнёров
        - Рост нагрузки из-за внешних заказов, который MES не выдерживает
        - Потеря сообщений в очереди RabbitMQ (из-за задержек в обработке).
4. Медленный дашборд MES
        - Долгая загрузка списка заказов, даже после внедрения фильтров.
        - Возможные неоптимальные SQL-запросы или отсутствие кеширования.

Список инициатив:
1. Оптимизация расчёта стоимости в MES
        - Внедрить кеширование для повторяющихся моделей.
        - Вынести расчёты на отдельные воркеры для асинхронной обработки.
2. Масштабирование инфраструктуры MES
        - Добавить горизонтальное масштабирование MES (несколько инстансов).
        - Перенести расчёты в отдельный сервис с очередью задач.
        - Разделить базу MES на чтение и запись.
3. Повышение стабильности API и очередей
        - Внедрить мониторинг RabbitMQ (метрики, алерты, логирование проблем).
        - Оптимизировать работу очередей, увеличить число воркеров на стороне CRM.
        - Ограничить нагрузку со стороны партнёров (rate limiting, квоты).
4. Ускорение дашборда MES
        - Добавить индексы в БД и оптимизировать SQL-запросы.
        - Ввести предварительное кеширование списка заказов.
        - Ограничить загрузку заказов по времени (например, показывать только за последние 7 дней).
5. Автоматизация SLA-контроля заказов
       - Внедрить метрики и дашборды для отслеживания просроченных заказов
       - Ввести автоматические уведомления о задержках (для менеджеров и партнёров).
6. Внедрение мониторинга для оценки эффективности изменений
       - Определяем ключевые метрики для каждого проблемного участка: время расчета стоимости в MES, время загрузки дашборда операторов,
         время обработки заказа по статусам, количество зависших заказов, ошибки в обработке API-запросов
       - Настраиваем сбор данных с помощью Prometheus + Grafana (для серверных метрик) и OpenTelemetry (для трейсинга)
       - Добавляем дашборды и алерты для быстрого реагирования на проблемы

Приоритет инициатив:
1. Оптимизация расчёта стоимости в MES (Скорость расчёта — ключевой фактор производительности и удовлетворённости клиентов).
2. Масштабирование инфраструктуры MES (Критично: без этого заказов будет становиться всё больше, и система просто встанет).
3. Внедрение мониторинга для оценки эффективности изменений (Критично: без данных монниторинга невозможно будет сказать, помогли ли другие изменения.
   Настройка алертинга позволит оперативно реагировать на сбои и выявлять узкие места).

Целевая архитектура через 6 месяцев
1. MES масштабируется горизонтально, расчёты вынесены в отдельные воркеры.
2. Дашборд MES загружается за секунды, отображая только актуальные заказы.
3. API стабильно обрабатывает внешние заказы без потерь в RabbitMQ.
4. CRM и MES работают быстрее за счёт оптимизации базы и улучшения логики обработки заказов.

